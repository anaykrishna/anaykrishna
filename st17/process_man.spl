alias ret_val R0;
alias fn R1;
alias pid R2;

if(fn == 2) then		//free user area page
	alias pgno R3;
	pgno = [PROCESS_TABLE + 16*pid + 12];
	multipush(R0, R1, R2, R3);
	R1 = 2;				//fn for Release Page : 2 in mem_manager
	R2 = pgno;
	call MEMORY_MANAGER;
	multipop(R0, R1, R2, R3);
	return;
endif;

if(fn == 3) then		//Exit Process;
	multipush(R0, R1, R2);
    R1 = 4;				//Free page table : 4 in same module
    R2 = pid;
    call PROCESS_MANAGER;
    multipop(R0, R1, R2);

    multipush(R0, R1, R2);
    R1 = 2; 			//Free user area page : 2 in same module
    R2 = pid;
    breakpoint;
    call PROCESS_MANAGER;
    multipop(R0, R1, R2);

    [PROCESS_TABLE + 16*pid + 4] = TERMINATED;
    
    return;
endif;

if(fn == 4) then		//Free Page Table
	alias ptbr R3;
	ptbr = [PROCESS_TABLE + 16 * pid + 14];
	[ptbr + 0] = -1;	//Library
    [ptbr + 1] = "0000";
    [ptbr + 2] = -1;
    [ptbr + 3] = "0000";

	R4 = 4;
	
    while(R4 < 20) do
        if([ptbr + R4 + 1] != "0000") then
            multipush(R0, R1, R2, R3, R4);
            R1 = 2; //release page
            R2 = [ptbr + R4 + 0];
            call MEMORY_MANAGER;
            multipop(R0, R1, R2, R3, R4);

            [ptbr + R4 + 0] = -1;
            [ptbr + R4 + 1] = "0000";
        endif;

        R4 = R4 + 2;
    endwhile;

    return;
endif;



